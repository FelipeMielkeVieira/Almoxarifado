
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '~@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

/* For use in src/lib/core/theming/_palette.scss */
$md-mcgpalette0: (
    50 : #e0e9f6,
    100 : #b3c8e9,
    200 : #80a3db,
    300 : #4d7ecc,
    400 : #2663c1,
    500 : #0047b6,
    600 : #0040af,
    700 : #0037a6,
    800 : #002f9e,
    900 : #00208e,
    A100 : #bac4ff,
    A200 : #8799ff,
    A400 : #546dff,
    A700 : #3b58ff,
    contrast: (
        50 : #000000,
        100 : #000000,
        200 : #000000,
        300 : #ffffff,
        400 : #ffffff,
        500 : #ffffff,
        600 : #ffffff,
        700 : #ffffff,
        800 : #ffffff,
        900 : #ffffff,
        A100 : #000000,
        A200 : #000000,
        A400 : #ffffff,
        A700 : #ffffff,
    )
);

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$Front-End-primary: mat.define-palette($md-mcgpalette0);
$Front-End-accent: mat.define-palette($md-mcgpalette0);

// The warn palette is optional (defaults to red).
$Front-End-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$Front-End-theme: mat.define-light-theme((
  color: (
    primary: $Front-End-primary,
    accent: $Front-End-accent,
    warn: $Front-End-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($Front-End-theme);

/* You can add global styles to this file, and also import other style files */
@import url("https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&display=swap");

// Variáveis customizadas;
$primary: #0047b6;

// Importação das funções e variáveis;
// Com isso, pode-se usar funções do bootstrap, como o Map;
@import "../node_modules/bootstrap/scss/functions";
@import "../node_modules/bootstrap/scss/variables";

// Creio eu ser o arquivo compactado do bootstrap
// @import "../node_modules/bootstrap/dist/css/bootstrap.min.css";

// Com o de baixo, é possível fazer as alterações de variáveis aq no arquivo
//Import Bootstrap
@import "../node_modules/bootstrap/scss/bootstrap";

html {
  width: 100vw;
  height: 100vh;
  margin: 0;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: "Inter", sans-serif;
  font-size: var(--font-size--default);
}

body.dark-mode {
  background-color: #2d3436;
  color: #ffffff;

  .containerPrincipal {
    background: linear-gradient(180deg, rgb(31, 30, 30) 0%, #2d3436 100%);
  }

  #containerLogin {
    background-color: #52606d;

    #titulo {
      color: #ffffff;
    }

    .divInputLogin {
      border-color: #d3cec4;
    }

    .inputsLogin {
      background-color: #52606d;
      color: #d3cec4;
    }

    #esqueciSenha {
      color: #d3cec4;
    }

    .label-lembrar-me {
      color: #d3cec4;
    }

    #textoConta {
      color: #cbd2d9;
    }
  }
}

body.light-mode {
  background-color: #ffffff;
  color: #2d3436;

  .containerPrincipal {
    background: linear-gradient(180deg, rgb(238, 235, 235) 0%, #DFDFDF 100%);
  }

  #containerLogin {
    background-color: #ffffff ;
  }
}

body:not(.dark-mode-preloading) {
  transition: all 0.3s linear;
}

:root {
  --font-size--verysmall: 10px;
  --font-size--small: 14px;
  --font-size--default: 16px;
  --font-size--medium: 18px;
  --font-size--big: 20px;
  --font-size--verybig: 24px;
  --font-size--giant: 30px;
  --font-size--extreme: 40px;
}

.divOpacidade {
  position: absolute;
  background-color: white;
  top: 0;
  left: 0;
  opacity: 0.5;
  width: 100vw;
  height: 100vh;
}
